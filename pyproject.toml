[tool.black]
line-length = 120
target_version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | \.vscode
)
'''

[tool.isort]
line_length = 120
force_grid_wrap = 0
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
known_first_party = "svc"
default_section = "THIRDPARTY"
lines_after_imports = -1

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning:distutils",
    "ignore::DeprecationWarning:aiojobs",
    "ignore::DeprecationWarning:asyncio",
    "ignore::DeprecationWarning:sqlalchemy_utils",
]
asyncio_mode="auto"

[tool.poetry]
name = "promotion"
version = "0.0.0"
description = ""
authors = ["Company"]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^1.10.2"
fastapi = "^0.88.0"
SQLAlchemy = {extras = ["mypy"], version = "^1.4.45"}
SQLAlchemy-Utils = "^0.37.4"
GeoAlchemy2 = "^0.9.4"
asyncpg = "^0.27.0"
PyNaCl = "^1.5.0"
gunicorn = "^20.1.0"
uvicorn = "^0.20.0"
PyYAML = "^6.0"
pytz = "^2022.7"
python-json-logger = "^2.0.4"
starlette-exporter = "^0.14.0"
opentelemetry-sdk = "^1.15.0"
opentelemetry-exporter-jaeger = "^1.15.0"
opentelemetry-exporter-zipkin = "^1.15.0"
opentelemetry-propagator-b3 = "^1.15.0"
opentelemetry-instrumentation-fastapi = "^0.36b0"
opentelemetry-instrumentation-sqlalchemy = "^0.36b0"
aiokafka = "^0.8.0"
sqlalchemy-citext = "^1.8.0"
aiocache = {extras = ["redis"], version = "^0.11.1"}
aioredis = "^1.3.1"

[tool.poetry.group.dev.dependencies]
httpx = "^0.23.1"
isort = "^5.11.4"
mypy = "^0.991"
bandit = "^1.7.4"
coverage = "^7.0.1"
flake8 = "^6.0.0"
safety = "^2.3.5"
alembic = "^1.9.1"
psycopg2-binary = "^2.9.5"
factory-boy = "^3.2.1"
types-PyYAML = "^6.0.12.2"
types-pytz = "^2022.7.0.0"
black = "^22.12.0"
pytest = "^7.2.0"
pytest-asyncio = "^0.20.3"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-aioresponses = "^0.2.0"

#------------------API CLIENT------------------
[build-system]
requires = [
  "setuptools >= 62.6.0",
  "wheel >= 0.38.1",
  "setuptools-git-versioning"
]
build-backend = "setuptools.build_meta"

[project]
name = "promotion"
description = "Promotion API"
dependencies = [
    "importlib-metadata; python_version > '3.10'",
]
dynamic = ["version"]


[tool.setuptools.package-dir]
promotion = 'svc'

[tool.setuptools-git-versioning]
enabled = true
dev_template = "{tag}.dev{ccount}+git.{sha}"